//
// Generated By:JAX-WS RI IBM 2.2.1-11/25/2013 11:48 AM(foreman)- (JAXB RI IBM 2.2.3-11/25/2013 12:35 PM(foreman)-)
//


package www.bn.simm.ws.open.service;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

@WebServiceClient(name = "ServiceMessageService", targetNamespace = "http://service.open.ws.simm.bn.www", wsdlLocation = "WEB-INF/wsdl/ServiceMessage.wsdl")
public class ServiceMessageService
    extends Service
{

    private final static URL SERVICEMESSAGESERVICE_WSDL_LOCATION;
    private final static WebServiceException SERVICEMESSAGESERVICE_EXCEPTION;
    private final static QName SERVICEMESSAGESERVICE_QNAME = new QName("http://service.open.ws.simm.bn.www", "ServiceMessageService");

    static {
            SERVICEMESSAGESERVICE_WSDL_LOCATION = www.bn.simm.ws.open.service.ServiceMessageService.class.getResource("/WEB-INF/wsdl/ServiceMessage.wsdl");
        WebServiceException e = null;
        if (SERVICEMESSAGESERVICE_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find 'WEB-INF/wsdl/ServiceMessage.wsdl' wsdl. Place the resource correctly in the classpath.");
        }
        SERVICEMESSAGESERVICE_EXCEPTION = e;
    }

    public ServiceMessageService() {
        super(__getWsdlLocation(), SERVICEMESSAGESERVICE_QNAME);
    }

    public ServiceMessageService(WebServiceFeature... features) {
        super(__getWsdlLocation(), SERVICEMESSAGESERVICE_QNAME, features);
    }

    public ServiceMessageService(URL wsdlLocation) {
        super(wsdlLocation, SERVICEMESSAGESERVICE_QNAME);
    }

    public ServiceMessageService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SERVICEMESSAGESERVICE_QNAME, features);
    }

    public ServiceMessageService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ServiceMessageService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ServiceMessage
     */
    @WebEndpoint(name = "ServiceMessage")
    public ServiceMessage getServiceMessage() {
        return super.getPort(new QName("http://service.open.ws.simm.bn.www", "ServiceMessage"), ServiceMessage.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ServiceMessage
     */
    @WebEndpoint(name = "ServiceMessage")
    public ServiceMessage getServiceMessage(WebServiceFeature... features) {
        return super.getPort(new QName("http://service.open.ws.simm.bn.www", "ServiceMessage"), ServiceMessage.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SERVICEMESSAGESERVICE_EXCEPTION!= null) {
            throw SERVICEMESSAGESERVICE_EXCEPTION;
        }
        return SERVICEMESSAGESERVICE_WSDL_LOCATION;
    }

}
