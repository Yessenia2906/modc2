//
// Generated By:JAX-WS RI IBM 2.2.1-11/25/2013 11:48 AM(foreman)- (JAXB RI IBM 2.2.3-11/25/2013 12:35 PM(foreman)-)
//


package www.bn.simm.ws.open.service;

import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.Response;
import javax.xml.ws.ResponseWrapper;
import www.bn.simm.ws.open.bean.RequestMessage;
import www.bn.simm.ws.open.bean.ResponseMessage;

@WebService(name = "ServiceMessage", targetNamespace = "http://service.open.ws.simm.bn.www")
@XmlSeeAlso({
    www.bn.simm.ws.open.bean.ObjectFactory.class,
    www.bn.simm.ws.open.service.ObjectFactory.class
})
public interface ServiceMessage {


    /**
     * 
     * @param requestMessage
     * @return
     *     returns javax.xml.ws.Response<www.bn.simm.ws.open.service.SendMessageResponse>
     */
    @WebMethod(operationName = "sendMessage")
    @RequestWrapper(localName = "sendMessage", targetNamespace = "http://service.open.ws.simm.bn.www", className = "www.bn.simm.ws.open.service.SendMessage")
    @ResponseWrapper(localName = "sendMessageResponse", targetNamespace = "http://service.open.ws.simm.bn.www", className = "www.bn.simm.ws.open.service.SendMessageResponse")
    public Response<SendMessageResponse> sendMessageAsync(
        @WebParam(name = "requestMessage", targetNamespace = "http://service.open.ws.simm.bn.www")
        RequestMessage requestMessage);

    /**
     * 
     * @param requestMessage
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "sendMessage")
    @RequestWrapper(localName = "sendMessage", targetNamespace = "http://service.open.ws.simm.bn.www", className = "www.bn.simm.ws.open.service.SendMessage")
    @ResponseWrapper(localName = "sendMessageResponse", targetNamespace = "http://service.open.ws.simm.bn.www", className = "www.bn.simm.ws.open.service.SendMessageResponse")
    public Future<?> sendMessageAsync(
        @WebParam(name = "requestMessage", targetNamespace = "http://service.open.ws.simm.bn.www")
        RequestMessage requestMessage,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<SendMessageResponse> asyncHandler);

    /**
     * 
     * @param requestMessage
     * @return
     *     returns www.bn.simm.ws.open.bean.ResponseMessage
     */
    @WebMethod
    @WebResult(name = "sendMessageReturn", targetNamespace = "http://service.open.ws.simm.bn.www")
    @RequestWrapper(localName = "sendMessage", targetNamespace = "http://service.open.ws.simm.bn.www", className = "www.bn.simm.ws.open.service.SendMessage")
    @ResponseWrapper(localName = "sendMessageResponse", targetNamespace = "http://service.open.ws.simm.bn.www", className = "www.bn.simm.ws.open.service.SendMessageResponse")
    public ResponseMessage sendMessage(
        @WebParam(name = "requestMessage", targetNamespace = "http://service.open.ws.simm.bn.www")
        RequestMessage requestMessage);

}
